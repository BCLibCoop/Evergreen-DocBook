<?xml version='1.0' encoding='UTF-8'?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:id="upgradingevergreen">
	<info>
	<title>Upgrading Evergreen from 1.4 to 1.6</title>
		<abstract>
			<para>This Chapter will explain the step-by-step process of upgrading <application>Evergreen
			</application> from version 1.4 to 1.6, including steps to upgrade <application>OpenSRF</application>. Before 
			upgrading, it is important to carefully plan an upgrade strategy to minimise system downtime and 
			service interruptions. All of the steps in this chapter are to be completed from the command line.</para>
        	</abstract>
	</info>    
	<procedure>
		<step>
			<para>Stop Evergreen and back up data.</para>
			<procedure>
				<step>
					<para>As <emphasis>root</emphasis>, stop the <application>Apache</application> 
					web server<indexterm><primary>web server</primary><secondary>Apache</secondary></indexterm>.</para>
				</step>
				<step>
					<para>As the <emphasis>opensrf</emphasis> user, stop all 
					<application>Evergreen</application>
					and <application>OpenSRF</application> services:</para>
					<screen>osrf_ctl.sh -l -a stop_all</screen>
				</step>
				<step>
					<para>Back up of the <filename class='directory'>/openils</filename> 
					directory.</para>
				</step>
				<step>
					<para><link linkend="backupevergreendatabase">Back up the <application>evergreen
					</application> database</link>.</para>
				</step>
			</procedure>
		</step>
		<step>
			<para>Upgrade OpenSRF<indexterm><primary>OpenSRF</primary></indexterm> to 1.2</para>
			<procedure>
				<step>
					<para>As the opensrf user, download and extract the source files for OpenSRF 
					1.2:</para>
					<screen>wget \
					http://open-ils.org/downloads/OpenSRF-1.2.2.tar.gz</screen>
					<screen>tar xzf OpenSRF-1.2.2.tar.gz</screen>
					<para>A new directory OpenSRF-1.2.2 will be created</para>
					<note><para>For the latest edition of OpenSRF, check the Evergreen download page at 
					<ulink url="http://www.open-ils.org/downloads.php" />.
					</para></note>
				</step>
				<step>	
					<para>As the root user, install the software prerequisites using the automatic 
					prerequisite installer.</para> 
					<screen>aptitude install make</screen>
					<screen>cd /home/opensrf/OpenSRF-1.2.2</screen>
					<para>Replace <emphasis>[distribution]</emphasis> below with the following value 
					for your distribution:</para>
					<itemizedlist>
						<listitem>
							<para><emphasis>debian-etch</emphasis> for Debian Etch (4.0)<indexterm><primary>Linux</primary><secondary>Debian</secondary></indexterm></para>
						</listitem>
						<listitem>
							<para><emphasis>debian-lenny</emphasis> for Debian Lenny (5.0)</para>
						</listitem>
						<listitem>
						<para><emphasis>ubuntu-hardy</emphasis> for Ubuntu Hardy Heron (8.04)<indexterm><primary>Linux</primary><secondary>Ubuntu</secondary></indexterm></para>
						</listitem>
						<listitem>
							<para><emphasis>ubuntu-intrepid</emphasis> for Ubuntu Intrepid Ibex 
							(8.10)</para>
						</listitem>
						<listitem>
							<para><emphasis>ubuntu-jaunty</emphasis> for Ubuntu Jaunty Jackalope 
							(9.04)</para>
						</listitem>
						<listitem>
							<para><emphasis>ubuntu-karmic</emphasis> for Ubuntu Karmic Koala 
							(9.10)</para>
						</listitem>
					</itemizedlist>
					<screen>make -f src/extras/Makefile.install <emphasis>[distribution]</emphasis>
					</screen>
					<para>This will install a number of packages required by OpenSRF on your system, 
					including some Perl modules from CPAN<indexterm><primary>programming language</primary><secondary>Perl</secondary><tertiary>CPAN</tertiary>
</indexterm>. You can say “no” to the initial CPAN 
					configuration prompt to allow it to automatically configure itself to download 
					and install Perl modules from CPAN. The CPAN installer will ask you a number of 
					times whether it should install prerequisite modules - say “yes”.</para>
				</step>
				<step>	
					<para>As the opensrf user, configure and compile OpenSRF:</para> 
					<note>You can include the –enable-python and –enable-java configure options if 
					you want to include support for Python<indexterm><primary>programming language</primary><secondary>Python</secondary>
</indexterm> and Java<indexterm><primary>programming language</primary><secondary>Java</secondary>
</indexterm>, respectively.</note>
					<screen>cd /home/opensrf/OpenSRF-1.2.2</screen>
					<screen>./configure --prefix=/openils --sysconfdir=/openils/conf</screen>
					<screen>make</screen>
				</step>
				<step>	
					<para>As the root user, return to your OpenSRF build directory and install 
					OpenSRF:</para>
					<screen>cd /home/opensrf/OpenSRF-1.2.2</screen>
					<screen>make install</screen>
				</step>
				<step>
					<para>As the root user, change the ownership of the installed files to the opensrf 
					user:</para>
					<screen>chown -R opensrf:opensrf /openils</screen>
				</step>
				<step>
					<para>Restart and Test OpenSRF</para>
					<screen>osrf_ctl.sh -l -a start_all</screen>
					<screen>/openils/bin/srfsh</screen>
					<screen>srfsh#  request opensrf.math add 2 2</screen>
		 			<para>You should see output like:</para>
		 			<screen>Received Data: 4</screen>
					<screen></screen>
		 			<screen>------------------------------------</screen>
		 			<screen>Request Completed Successfully</screen>
		 			<screen>Request Time in seconds: 0.007519</screen>
		 			<screen>------------------------------------</screen>
					<screen></screen>
		 			<screen>srfsh#</screen>
					<para>If test <emphasis>Completed Successfully</emphasis> move onto next section. 
					If not, refer to <link linkend="troubleshooting">troubleshooting</link> section 
					of this documentation.</para> 
				</step>	
			</procedure>	
		</step>
		<step>
			<para>Upgrade <application>Evergreen</application> to 1.6</para>
			<procedure>
				<step>
					<para>As the <emphasis>opensrf</emphasis> user, download and extract Evergreen 1.6
					</para>
					<screen>wget \</screen> 
					<screen>http://evergreen-ils.org/downloads/Evergreen-ILS-1.6.0.3.tar.gz</screen>
					<screen>tar xzf Evergreen-ILS-1.6.0.3.tar.gz</screen>
					<note><para>For the latest edition of Evergreen check the Evergreen download page at
					<ulink url="http://www.open-ils.org/downloads.php" /></para></note>
				</step>
				<step>
					<para>As the <emphasis>root</emphasis> user, install the prerequisites:</para> 
					<screen>cd /home/opensrf/Evergreen-ILS-1.6.0.3</screen>	
					<para>On the next command, replace <emphasis>[distribution]</emphasis> with one of 
					these values for your distribution of Debian or Ubuntu:</para>
					<itemizedlist>
						<listitem>
							<para><emphasis>debian-etch</emphasis> for Debian Etch (4.0)</para>
						</listitem>
						<listitem>
							<para><emphasis>debian-lenny</emphasis> for Debian Lenny (5.0)</para>
						</listitem>
						<listitem>
							<para><emphasis>ubuntu-hardy</emphasis> for Ubuntu Hardy Heron 
							(8.04)</para>
						</listitem>
						<listitem>
							<para><emphasis>ubuntu-intrepid</emphasis> for Ubuntu Intrepid Ibex 
							(8.10)</para>
						</listitem>
						<listitem>
							<para><emphasis>ubuntu-jaunty</emphasis> for Ubuntu Jaunty Jackalope 
							(9.04)</para>
						</listitem>
						<listitem>
							<para><emphasis>ubuntu-karmic</emphasis> for Ubuntu Karmic Koala 
							(9.10)</para>
						</listitem>
					</itemizedlist>
					<screen>make -f Open-ILS/src/extras/Makefile.install <emphasis>[distribution]</emphasis></screen>
				</step>
				<step>
					<para>As the <emphasis>opensrf</emphasis> user, configure and compile 
					<application>Evergreen</application>:</para>
					<screen>cd /home/opensrf/Evergreen-ILS-1.6.0.3</screen>
					<screen>./configure --prefix=/openils --sysconfdir=/openils/conf</screen>
					<screen>make</screen>
				</step>
				<step>
					<para>As the <emphasis>root</emphasis> user, install 
					<application>Evergreen</application>:</para>
					<screen>make STAFF_CLIENT_BUILD_ID=rel_1_6_0_3 install</screen>
				</step>
				<step>
					<para>Change to the <application>Evergreen</application> installation 
					directory:</para>
					<screen>cd /home/opensrf/Evergreen-ILS-1.6.0.3</screen>
				</step>
				<step>
					<para>As the <emphasis>root</emphasis> user, build live-db-setup.pl for the cgi-bin 
					bootstrapping scripts and offline-config.pl for the offline staff client data 
					uploader:</para>
					<screen>perl Open-ILS/src/support-scripts/eg_db_config.pl \</screen> 
					<screen>--create-bootstrap --create-offline --user evergreen \</screen> 
					<screen>--password evergreen --hostname localhost --port 5432 \</screen> 
					<screen>--database evergreen</screen>
				</step>
				<step>
					<para>As the <emphasis>root</emphasis> user, change all files to be owned by the 
					<emphasis>opensrf</emphasis> user and group:</para>
					<screen>chown -R opensrf:opensrf /openils</screen>
				</step>
				<step>
					<para>Update the Evergreen database</para>
					<screen>psql -U evergreen -h localhost \</screen> 
					<screen>-f Open-ILS/src/sql/Pg/1.4.0.5-1.6.0.0-upgrade-db.sql evergreen</screen>
					<screen>psql -U evergreen -h localhost \</screen>					
					<screen>-f Open-ILS/src/sql/Pg/1.6.0.0-1.6.0.1-upgrade-db.sql evergreen</screen>
					<screen>psql -U evergreen -h localhost \</screen>	
					<screen>-f Open-ILS/src/sql/Pg/1.6.0.1-1.6.0.2-upgrade-db.sql evergreen</screen>
					<screen>psql -U evergreen -h localhost \</screen>	
					<screen>-f Open-ILS/src/sql/Pg/1.6.0.2-1.6.0.3-upgrade-db.sql evergreen</screen>
					<screen>psql -U evergreen -h localhost \</screen>	
					<screen>psql -U evergreen -h localhost -f 1.6.0-mmbxs-cleanup.sql \ 
					evergreen</screen> 
				</step>
				<step>
					<para>As the <emphasis>opensrf</emphasis> user, 
					copy /openils/conf/oils_web.xml.example to /openils/conf/oils_web.xml 
					(needed for acquisitions templates).</para>
					<screen>cp /openils/conf/oils_web.xml.example \
					/openils/conf/oils_web.xml</screen>
				</step>
				<step>
					<para>Update opensrf_core.xml and opensrf.xml by copying the new example files (/
					openils/conf/opensrf_core.xml.example and /openils/conf/opensrf.xml).</para>
				<screen>cp /openils/conf/opensrf_core.xml.example \</screen>
				<screen>/openils/conf/opensrf_core.xml</screen>
				<screen>cp /openils/conf/opensrf.xml.example /openils/conf/opensrf.xml</screen>
				</step>
				<step>
					<para>Update opensrf.xml with the database connection info:</para>
					<screen>perl Open-ILS/src/support-scripts/eg_db_config.pl \</screen> 
					<screen>--update-config --service all --user evergreen \</screen>
					<screen>--password evergreen --hostname localhost --port 5432 \</screen> 
					<screen>--database evergreen</screen>
				</step>
				<step>
					<para>Update /etc/apache2/startup.pl by copying the example from 
					Open-ILS/examples/apache/startup.pl.</para>
				</step>
				<step>
					<para>Update /etc/apache2/eg_vhost.conf by copying the example from 
					Open-ILS/examples/apache/eg_vhost.conf.</para>
				</step>
				<step>
				<para>Update /etc/apache2/sites-available/eg.conf by copying the example from Open-ILS/
				examples/apache/eg.conf.</para>
				</step>
				<step>
					<para>Recover customizations you have made to the <application>Apache</application> 
					configuration files. For example, if you purchased an SSL certificate, you 
					will need to edit eg.conf to point to the appropriate SSL certificate files.</para>
				</step> 
			</procedure>	
		</step>
		<step>
			<para>Restart Evergreen and Test</para>
			<procedure>
				<step>
					<para>As the <emphasis>opensrf</emphasis> user, start all 
					<application>Evergreen</application> and <application>OpenSRF</application> 
					services:</para>
					<screen>osrf_ctl.sh -l -a start_all</screen>
				</step>
				<step>
					<para>As the <emphasis>opensrf</emphasis> user, run autogen to refresh the static 
					organizational data files:</para>
					<screen>cd /openils/bin</screen>
					<screen>./autogen.sh -c /openils/conf/opensrf_core.xml -u</screen>	
				</step>
				<step>
					<para>Start srfsh and try logging in  using your <application>Evergreen</application>
					username and password:</para>
					<screen>/openils/bin/srfsh</screen>
					<screen>srfsh% login <emphasis>username password</emphasis></screen> 
				</step>	
				<step>
					<para>Start the <application>Apache</application> web server.</para>
				</step>
			</procedure>
		</step>
	</procedure>
	<note>
		<title>Troubleshooting:</title>
		<para>If you encounter errors, refer to the <link linkend="troubleshooting">troubleshooting 
		section</link> of this documentation for tips 
		on finding solutions and seeking further assistance from the Evergreen community.</para>  
	</note>
</chapter>
