<?xml version='1.0' encoding='UTF-8'?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:id="upgradingevergreen">
	<info>
		<title>Upgrading Evergreen to 2.1</title>
		<abstract>
			<para>This Chapter will explain the step-by-step process of upgrading <application>Evergreen
			</application> to 2.1, including steps to upgrade <application>OpenSRF</application>. Before 
			upgrading, it is important to carefully plan an upgrade strategy to minimize system downtime and 
			service interruptions. All of the steps in this chapter are to be completed from the command line.</para>
			
        	</abstract>
	</info>    
		<para>Evergreen 2.0 has several software requirements:</para>
 		<itemizedlist>
			<listitem>PostgreSQL: Version 9.0 is the minimum supported version of PostgreSQL. </listitem>
			<listitem>Linux: Evergreen 2.0 has been tested on Debian Squeeze (6.0) and Ubuntu Lucid Lynx (10.04). If you are running an older version of 
			these distributions, you may want to upgrade before installing Evergreen 2.1. For instructions on upgrading these distributions, visit the 
			<ulink url="http://www.debian.org/releases/squeeze/">Debian</ulink> or <ulink url="https://help.ubuntu.com/community/LucidUpgrades">Ubuntu</ulink> websites.</listitem>
		</itemizedlist>
		<para>In the following instructions, you are asked to perform certain steps as either the <systemitem class="username">root</systemitem>  or 
		<systemitem class="username">opensrf</systemitem> user.</para>
      		<itemizedlist>
			<listitem>Debian: To become the <systemitem class="username">root</systemitem> user, issue the <command>su</command> command and enter the password of the 
			<systemitem class="username">root</systemitem> user.</listitem>
      			<listitem>Ubuntu: To become the <systemitem class="username">root</systemitem> user, issue the <command>sudo su</command> command and enter the password of your current user.</listitem>
		</itemizedlist>
		<para>To switch from the <systemitem class="username">root</systemitem> user to a different user, issue the <command>su - [user]</command> command; for example, 
		<command>su - opensrf</command>. Once you have become a non-root user, to become the <systemitem class="username">root</systemitem> user again simply issue the exit command.</para> 
		<para>In the following instructions, <filename class='directory'>/path/to/OpenSRF/</filename> represents the path to the OpenSRF source directory.</para>
	
		<procedure>
			<step>
				<para>Stop Evergreen and back up your data:</para>
				<substeps>
					<step>
						<para>As <systemitem class="username">root</systemitem>, stop the <application>Apache</application> 
						web server<indexterm><primary>web server</primary><secondary>Apache</secondary></indexterm>.</para>
					</step>
					<step>
						<para>As the <systemitem class="username">opensrf</systemitem> user, stop all 
						<application>Evergreen</application>
						and <application>OpenSRF</application> services:</para>
						<screen><userinput>osrf_ctl.sh -l -a stop_all</userinput></screen>
					</step>
					<step>
						<para>Back up of the <filename class='directory'>/openils</filename> 
						directory.</para>
					</step>
					<step>
						<para>Back up the <application>evergreen
						</application> database.</para>
					</step>
				</substeps>
			</step>
			<step>
				<para>Upgrade OpenSRF to the latest edition.</para>
				<note><para>You may skip this step if the latest version of OpenSRF 2.0.x was previously installed.</para></note>
				<para>Download and install the latest version of Opensrf from the <ulink url="http://open-ils.org/opensrf.php">OpenSRF download page.</ulink></para>
			</step>
			<step>
				<para>As the <systemitem class="username">opensrf</systemitem> user, download and extract <application>Evergreen 2.1</application>
				</para>
<screen><userinput>
wget http://www.open-ils.org/downloads/Evergreen-ILS-2.1.1.tar.gz
tar xzf Evergreen-ILS-2.1.1.tar.gz
</userinput></screen>
				<note><para>For the latest edition of Evergreen 2.1, check the Evergreen download page at
				<ulink url="http://www.open-ils.org/downloads.php" /> and adjust upgrading instructions accordingly.</para></note>
			</step>
			<step>
				<para>As the <systemitem class="username">root</systemitem> user, install the prerequisites:</para> 
				<screen><userinput>cd /home/opensrf/Evergreen-ILS-2.1.1</userinput></screen>	
				<para>On the next command, replace <option>[distribution]</option> with one of 
				these values for your distribution of Debian or Ubuntu:</para>
				<itemizedlist>
					
					<listitem>
						<para><option>debian-squeeze</option> for <systemitem class="osname">Debian Squeeze (6.0)</systemitem></para>
					</listitem>
					
					<listitem>
						<para><option>ubuntu-lucid</option> for  <systemitem class="osname">Ubuntu Lucid Lynx 
						(10.04)</systemitem></para>
					</listitem>
				</itemizedlist>
				<screen><userinput>make -f Open-ILS/src/extras/Makefile.install <option>[distribution]</option></userinput></screen>
			</step>
			<step>
				<para>As the <systemitem class="username">opensrf</systemitem> user, configure and compile 
				<application>Evergreen</application>:</para>
				<screen><userinput>cd /home/opensrf/Evergreen-ILS-2.1.1</userinput></screen>
				<screen><userinput>./configure --prefix=/openils --sysconfdir=/openils/conf</userinput></screen>
				<screen><userinput>make</userinput></screen>
			</step>
			<step>
				<para>As the <systemitem class="username">root</systemitem> user, install 
				<application>Evergreen</application>:</para>
				<screen><userinput>make STAFF_CLIENT_BUILD_ID=rel_2_1_1 install</userinput></screen>
			</step>
			<step>
				<para>As the <emphasis>root</emphasis> user, change all files to be owned by the 
				<emphasis>opensrf</emphasis> user and group:</para>
				<screen><userinput>chown -R opensrf:opensrf /openils</userinput></screen>
			</step>						
			<step>
				<para>As the <systemitem class="username">opensrf</systemitem> user, update configuration files:</para>
<screen><userinput>
cd /home/opensrf/Evergreen-ILS-2.1.1
# and offline-config.pl for the offline staff client data uploader
perl Open-ILS/src/support-scripts/eg_db_config.pl \
  --create-offline --user evergreen --password evergreen \
  --hostname localhost --port 5432 --database evergreen
</userinput></screen>
			</step>	

			<step>
				<para>As the <systemitem class="username">opensrf</systemitem> user, update server symlink in <filename class="directory">/openils/var/web/xul/</filename>:</para>
<screen><userinput>
cd /openils/var/web/xul/
rm server
ln -s rel_2_1_1/server
</userinput></screen>
			</step>
			<step>
				<para>Change to the <application>Evergreen</application> installation 
				directory:</para>
<screen><userinput>cd /home/opensrf/Evergreen-ILS-2.1.1</userinput></screen>
			</step>

			<step>
				<para>Update the <database>evergreen</database> database:</para>
				<note><para>It is recommended that you <link linkend="backingup">back up your Evergreen database</link> in order to restore your data if 
				anything goes wrong.</para></note>
				
				<para>If you were running Evergreen 2.0.x on PostgreSQL 8.4, you will need to upgrade to PostgreSQL 9.0:</para>
				<substeps>
					<title>Upgrade to PostgreSQL 9.0</title>
					<step>   				
						<para>Install the PostgreSQL 9.0 server packages following the 
						<link linkend="_creating_the_evergreen_database">installation instructions</link>. Pay close attention to the backports section.</para>
					</step>
					<step> 				
						<para> Upgrade your existing PostgreSQL 8.4 cluster to a PostgreSQL 9.0 cluster by issuing the following commands as 
						<systemitem class="username">root</systemitem>:
						</para>
						<substeps>
							<step>
								<para>Blow away the default PostgreSQL 9.0 main cluster:</para>
<screen><userinput>pg_dropcluster 9.0 main</userinput></screen> 
							</step>
							<step>
								<para>Upgrade your production PostgreSQL 8.4 main cluster</para>
<screen><userinput>pg_upgradecluster --stop 8.4 main</userinput></screen> 
							</step>
							<step>
								<para>OPTIONAL: Blow away your old PostgreSQL 8.4 main cluster. If you don't do this, then you might need to 
								update <filename>opensrf.xml</filename> with new port numbers (probably 5433)</para>
<screen><userinput>pg_dropcluster 8.4 main</userinput></screen> 
							</step>
						</substeps>
					</step>
					<step>
							<para>Add the hstore PostgreSQL contrib module to your Evergreen database:</para>
<screen><userinput>
psql -U evergreen -h localhost -f /usr/share/postgresql/9.0/contrib/hstore.sql -d evergreen
</userinput></screen> 
					</step>
				</substeps>
			</step>
			<step>
				<para>Upgrade Evergreen Schema.</para>
				<caution><para>Pay attention to error output as you run these scripts. You should do additional troubleshooting and error reporting to the  
				<ulink url="http://libmail.georgialibraries.org/mailman/listinfo/open-ils-dev"> Evergreen Developer List</ulink> if you encounter errors.
				</para></caution> 
<screen>
<userinput>
cd /home/opensrf/Evergreen-ILS-2.1.1
psql -U evergreen -h localhost -f Open-ILS/src/sql/Pg/2.0-2.1-upgrade-db.sql evergreen
psql -U evergreen -h localhost -f Open-ILS/src/sql/Pg/2.1.0-2.1.1-upgrade-db.sql evergreen
</userinput>
</screen> 	        
			</step>

			<step>
				<para>As the <systemitem class="username">opensrf</systemitem> user, 
				copy <filename>/openils/conf/oils_web.xml.example</filename> to <filename>/openils/conf/oils_web.xml</filename>
				. (If upgrading from 1.6.1.x, <filename>oils_web.xml</filename> should already exist.)</para>
				<indexterm><primary>configuration files</primary><secondary>oils_web.xml</secondary></indexterm>
				<screen><userinput>cp /openils/conf/oils_web.xml.example /openils/conf/oils_web.xml</userinput></screen>
			</step>
			<step>
				<para>Update <filename>opensrf_core.xml</filename> and <filename>opensrf.xml</filename> by copying the new example files 
				(<filename>/openils/conf/opensrf_core.xml.example</filename> and <filename>/openils/conf/opensrf.xml</filename>).</para>
				<indexterm><primary>configuration files</primary><secondary>opensrf.xml</secondary></indexterm>
				<screen><userinput>cp /openils/conf/opensrf_core.xml.example /openils/conf/opensrf_core.xml</userinput></screen>
				<indexterm><primary>configuration files</primary><secondary>opensrf_core.xml</secondary></indexterm>
				<screen><userinput>cp /openils/conf/opensrf.xml.example /openils/conf/opensrf.xml</userinput></screen>
				<caution><para>Copying these configuration files will remove any customizations you have made to them. Remember to redo your customizations after copying 
				them.</para></caution>
			</step>
			<step>
				<substeps>
					<title>Update Apache Files</title>
					<caution>
						<para>Copying these Apache configuration files will remove any customizations you have made to them. Remember to redo 
						your customizations after copying them. For example, if you purchased an SSL certificate, you 
						will need to edit <filename>eg.conf</filename> to point to the appropriate SSL certificate files.</para>
						<indexterm><primary>SSL</primary><secondary>certificates</secondary></indexterm>
					</caution> 
					<step>
						<para>Update <filename>/etc/apache2/startup.pl</filename> by copying the example from 
						<filename>Open-ILS/examples/apache/startup.pl</filename>.
						</para><indexterm><primary>configuration files</primary><secondary>startup.pl</secondary></indexterm>
					</step>
		
					<step>
						<para>Update /etc/apache2/eg_vhost.conf by copying the example from 
						Open-ILS/examples/apache/eg_vhost.conf.</para><indexterm><primary>configuration files</primary><secondary>eg_vhost.conf
						</secondary></indexterm>
					</step>
					<step>
					<para>Update <filename>/etc/apache2/sites-available/eg.conf</filename> by copying the example from <filename>Open-ILS/
					examples/apache/eg.conf</filename>.</para><indexterm><primary>configuration files</primary><secondary>eg.conf</secondary></indexterm>
					</step>
				</substeps>
			</step>
			<step>
				<para>Update <filename>opensrf.xml</filename> with the database connection info:</para>
				<para>If you are happy with the default settings in opensrf.xml.example, then:</para>
<screen><userinput>
cp -b /openils/conf/opensrf.xml.example /openils/conf/opensrf.xml
perl Open-ILS/src/support-scripts/eg_db_config.pl --update-config --service all \
  --database evergreen --host localhost --user evergreen --password evergreen
</userinput></screen>
				<para>Otherwise, compare /openils/conf/opensrf.xml with /openils/conf/opensrf.xml and manually copy the new pieces into place 
				in your existing opensrf.xml file</para>
			</step>
			<step>
				<para>As of Evergreen 2.1.1, the Perl modules are installed in the normal location on the system. To avoid conflicting versions, get the old versions of 					Perl modules out of your PERL5LIB path. Issue the following command as the opensrf user:</para>
<screen><userinput>
mv /openils/lib/perl5 /openils/lib/perl5-2.0
</userinput></screen>
			</step>
		
		</procedure>	
	<simplesect xml:id="testing_after_upgrade">
		<title>Restart Evergreen and Test</title>
		<procedure>
			<step>
				<para>As the <systemitem class="username">opensrf</systemitem> user, start all 
				<application>Evergreen</application> and <application>OpenSRF</application> 
				services:</para>
				<screen><userinput>osrf_ctl.sh -l -a start_all</userinput></screen>
			</step>
			<step>
				<para>As the <systemitem class="username">opensrf</systemitem> user, run <command>autogen</command> to refresh the static 
				organizational data files:</para><indexterm><primary>autogen</primary></indexterm>
<screen><userinput>
cd /openils/bin
./autogen.sh -c /openils/conf/opensrf_core.xml -u
</userinput></screen>
					
			</step>
			<step>
				<para>Start <command>srfsh</command> and try logging in  using your <application>Evergreen</application>
				username and password:</para>
<screen>
<userinput>/openils/bin/srfsh</userinput>
<prompt>srfsh%</prompt> <userinput>login <option>username</option> <option>password</option></userinput>
</screen> 
			</step>	
			<step>
				<para>Start the <application>Apache</application> web server.</para>
			</step>
		</procedure>
		<note>
			<para>If you encounter errors, refer to the <link linkend="troubleshooting">troubleshooting 
			section</link> of this documentation for tips 
			on finding solutions and seeking further assistance from the Evergreen community.</para>  
		</note>
	</simplesect>
</chapter>
